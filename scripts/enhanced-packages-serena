#!/bin/bash

# Serena Enhanced -- Minty Best of LTS Xenial & Bionic Ubuntu Versions
#
# Modifying just seven packages and using just three PPAs allows proper
# installation of most Ubuntu Bionic packages on Mint 18.1 Serena which
# results in a highly compatible and flexible Ubuntu-based system due
# being able to run (almost) all Xenial compatible software as well as
# (almost) all Bionic compatible software (with a few rare exceptions)
#
# Software requiring any of new Python (3.6.9), GTK2 (upgraded from
# 2.24.30 to 2.24.32), GTK3 (from 3.18.9 to 3.22.30) or Qt5 (5.5.1 to
# 5.9.5) libraries will install and run as expected after enhancement
#
# There are rare exceptions for applications where the Bionic version
# *must* be installed due Ubuntu library name changes, eg. multimedia
# apps using rubberband library (audio time-stretching/pitch-shifting)
# as the library name was changed from librubberband2v5 in Xenial to
# librubberband2 in Bionic (librubberband2 package could be changed so
# it "Provides" librubberband2v5 though easier to install Bionic apps)

path=~/Downloads

ubuntu=http://mirrors.kernel.org/ubuntu/pool
serena=http://packages.linuxmint.com/pool

pkg_num=7

declare -A pkgs

# Modify python3 package to fake version 3.6.9-1 and also include the
# dependencies for actual Python 3.6.9-1 (obtainable from a PPA source)
# as well as modify the "Provides" clause to add distutils and lib2to3
#
# All of which means that any/all Ubuntu Bionic python3 packages can be
# installed successfully on Ubuntu Xenial (with Python 3.6.9 from PPA)
# and all software requiring Python >= 3.6 can be installed and used

pkgs[1,0]="$ubuntu/main/p/python3-defaults"
pkgs[1,1]="python3_3.5.1-3"
pkgs[1,2]="python3_3.6.9-1+really3.5.1-3sav0"

# Modify python3-dev explicit dependency on python3 version to reflect
# new version number of python3 package (3.6.9-1+really3.5.1-3sav0)

pkgs[2,0]="$ubuntu/main/p/python3-defaults"
pkgs[2,1]="python3-dev_3.5.1-3"
pkgs[2,2]="python3-dev_3.5.1-3sav0"

# Makes duplicate of /etc/X11/Xsession.d/95dbus_update-activation-env
# in a new file named /etc/X11/Xsession.d/99vw_dbus_upd-activation-env
# which ensures that all exported variables get onto session bus due
# the filename chosen (starting with 99vw_dbus) being almost guaranteed
# to be immediately prior to the X11 main start file 99x11-common-start
#
# This is useful for example with qt5ct due this package installing the
# file /etc/X11/Xsession.d/99qt5ct that sets QT_QPA_PLATFORMTHEME=qt5ct
# to specify theming for all Qt5 (>= 5.7) applications be consistently
# handled by settings made by using qt5ct (Qt5 Configuration Tool)

pkgs[3,0]="$ubuntu/main/d/dbus"
pkgs[3,1]="dbus-x11_1.12.2-1ubuntu1.1"
pkgs[3,2]="dbus-x11_1.12.2-1ubuntu1.2~16.04.sav0"

# Modify description in /etc/linuxmint/info to reflect that this is no
# longer "vanilla Serena" but is actually "Bionic Serena" with all the
# Ubuntu Bionic packages that are part of the install -- shows up as a
# tooltip when pausing the mouse over the mintMenu Mate Panel widget

pkgs[4,0]="$serena/main/m/mint-info"
pkgs[4,1]="mint-info-mate_2016.11.02"
pkgs[4,2]="mint-info-mate_2016.11.02sav0"

# Remove "export QT_STYLE_OVERRIDE=gtk" lines from X11 session file
# /etc/X11/Xsession.d/99mint as this environment variable causes qt5ct
# application used for Qt5 theming to complain and fail to start at all

pkgs[5,0]="$ubuntu/main/p/perl"
pkgs[5,1]="perl-modules-5.22_5.22.1-9ubuntu0.6"
pkgs[5,2]="perl-modules-5.22_5.22.1-9ubuntu0.6"

# Remove "export QT_STYLE_OVERRIDE=gtk" lines from X11 session file
# /etc/X11/Xsession.d/99mint as this environment variable causes qt5ct
# application used for Qt5 theming to complain and fail to start at all

pkgs[6,0]="$serena/main/m/mint-artwork-common"
pkgs[6,1]="mint-artwork-common_2.1.0.1"
pkgs[6,2]="mint-artwork-common_2.1.0.1sav0"

# Remove redundant Metacity window manager gschema override to cleanup
# dpkg output when installing packages that include gschema definitions

pkgs[7,0]="$serena/main/m/mint-artwork-mate"
pkgs[7,1]="mint-artwork-mate_1.3.2"
pkgs[7,2]="mint-artwork-mate_1.3.2sav0"

pushd $path || exit

kern=$(dpkg --print-architecture)

for (( i = 1; i <= $pkg_num; i++ )) do

  pkg_src=${pkgs[$i,1]}
  pkg_mod=${pkgs[$i,2]}

  # last three packages are "all" arch
  if (( $i >= 5 )); then
    pkg_src=$pkg_src"_all"
    pkg_mod=$pkg_mod"_all"
  else
    pkg_src=$pkg_src"_$kern"
    pkg_mod=$pkg_mod"_$kern"
  fi

  # no good if patch doesn't exist
  if [ ! -e $pkg_src.patch ]; then break; fi

  # get source package from pool
  rm $pkg_src.deb
  wget ${pkgs[$i,0]}/$pkg_src.deb

  # extract source package
  dpkg-deb -R $pkg_src.deb $pkg_src

  # patch source package
  patch -p1 < $pkg_src.patch

  # rename as modded package
  if [ ! "$pkg_src" = "$pkg_mod" ]; then mv $pkg_src $pkg_mod; fi

  # pack modded package & cleanup
  fakeroot dpkg-deb -b $pkg_mod
  rm -R $pkg_mod

done
popd

